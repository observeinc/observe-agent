receivers:
  heartbeat:
    interval: {{.SelfMonitoring.Fleet.Interval}}
    config_interval: {{.SelfMonitoring.Fleet.ConfigInterval}}
    environment: ${env:OBSERVE_AGENT_ENVIRONMENT}
    auth_check:
      url: ${env:OBSERVE_COLLECTOR_URL}
      headers:
        authorization: ${env:OBSERVE_AUTHORIZATION_HEADER}
processors:
  resource/heartbeat:
    attributes:
    - key: observe.agent.hostname
      from_attribute: host.name
      action: insert
exporters:
  otlphttp/agentheartbeat:
      compression: zstd
      logs_endpoint: ${env:OBSERVE_COLLECTOR_URL}/v1/kubernetes/v1/entity
      headers:
          Authorization: ${env:OBSERVE_AUTHORIZATION_HEADER}
          X-Observe-Target-Package: Observe Agent
          X-Observe-Agent-Instance-Id: ${env:OBSERVE_AGENT_INSTANCE_ID}
          X-Observe-Context: {{ json (dict "version" (getenv "OBSERVE_AGENT_VERSION") "environment" (getenv "OBSERVE_AGENT_ENVIRONMENT")) | valToYaml }}
          X-Observe-Enable-Auth-Error-Reporting: "true"
      retry_on_failure:
          enabled: true
      sending_queue:
          num_consumers: 4
          queue_size: 100
service:
  pipelines:
    logs/heartbeat:
      receivers: [heartbeat]
      processors: [resourcedetection, resourcedetection/cloud, resource/agent_instance, resource/heartbeat]
      exporters: [otlphttp/agentheartbeat]  
