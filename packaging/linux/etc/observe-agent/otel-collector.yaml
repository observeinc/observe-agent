extensions:
  health_check:
    endpoint: "localhost:13133"
    path: "/status"
  file_storage:
    directory: ${env:FILESTORAGE_PATH}

connectors:
  count:

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: localhost:4317
      http:
        endpoint: localhost:4318

  filestats:
    include: '/etc/observe-agent/otel-collector.yaml'
    collection_interval: 240m
    initial_delay: 60s

  filelog/config: # TODO: Add observe-agent.yaml once we can obfuscate sensitive config fields
    include: [/etc/observe-agent/otel-collector.yaml]
    start_at: beginning
    poll_interval: 5m
    multiline:
      line_end_pattern: ENDOFLINEPATTERN

  prometheus/internal:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 5s
          static_configs:
            - targets: ['0.0.0.0:8888']

  hostmetrics:
    collection_interval: 20s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
          system.cpu.frequency:
            enabled: true
          system.cpu.logical.count:
            enabled: true
          system.cpu.physical.count:
            enabled: true
      load:
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
          system.linux.memory.available:
            enabled: true
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      network:
        metrics:
          system.network.conntrack.count:
            enabled: true
          system.network.conntrack.max:
            enabled: true
      paging:
        metrics:
          system.paging.utilization:
            enabled: true
      processes:
      process:
        metrics:
          process.context_switches:
            enabled: true
          process.cpu.utilization:
            enabled: true
          process.disk.operations:
            enabled: true      
          process.memory.utilization:
            enabled: true      
          process.open_file_descriptors:
            enabled: true      
          process.paging.faults:
            enabled: true      
          process.signals_pending:
            enabled: true      
          process.threads:
            enabled: true
        mute_process_name_error: true
        mute_process_exe_error: true
        mute_process_io_error: true
        mute_process_user_error: true

  filelog:
    include: [/var/log/**/*.log, /var/log/syslog]
    include_file_path: true
    storage: file_storage
    retry_on_failure:
      enabled: true
    max_log_size: 4MiB
    operators:
      - type: filter
        expr: 'body matches "otel-contrib"'

  journald:
    units:
      - cron
      - ssh
      - systemd-networkd
      - systemd-resolved
      - systemd-login
      - multipathd
      - systemd-user-sessions
      - ufw
      - otetcol-contrib

    priority: info

processors:
  # Snowflake limit for identifiers: Regardless of whether an identifier is unquoted or double-quoted, the maximum number of characters allowed is 255 (including blank spaces).
  # https://docs.snowflake.com/en/sql-reference/identifiers-syntax#identifier-requirements
  transform/truncate:
    log_statements:
      - context: log
        statements: 
          - truncate_all(attributes, 4095)
          - truncate_all(resource.attributes, 4095)
    trace_statements:
      - context: span
        statements:
          - truncate_all(attributes, 4095)
          - truncate_all(resource.attributes, 4095)

  memory_limiter:
    check_interval: 1s
    limit_percentage: 20
    spike_limit_percentage: 5
  
  batch:
  
  resourcedetection:
    detectors: [gcp, ecs, ec2, azure, system]
    override: true

exporters:
  otlphttp:
    endpoint: ${env:OBSERVE_ENDPOINT}
    headers:
      authorization: ${env:OBSERVE_TOKEN}
    sending_queue:
      num_consumers: 4
      queue_size: 100
    retry_on_failure:
      enabled: true

service:
  pipelines:
    
    metrics:
      receivers: [hostmetrics, prometheus/internal, count]
      processors: [memory_limiter, resourcedetection, batch]
      exporters: [otlphttp]

    metrics/filestats:
       receivers: [filestats]
       processors: [resourcedetection]
       exporters: [otlphttp]

    logs/config:
       receivers: [filelog/config]
       processors: [memory_limiter, transform/truncate, resourcedetection, batch]
       exporters: [otlphttp]
       
    logs:
      receivers: [otlp, filelog]
      processors: [memory_limiter, transform/truncate, resourcedetection, batch]
      exporters: [otlphttp, count]

    logs/journal:
      receivers: [otlp, journald]
      processors: [memory_limiter, transform/truncate, resourcedetection, batch]
      exporters: [otlphttp]
      
    traces:
      receivers: [otlp]
      processors: [memory_limiter, transform/truncate, resourcedetection, batch]
      exporters: [otlphttp]

  extensions: [health_check, file_storage]
  telemetry:
    metrics:
      level: detailed
      address: ":8888"