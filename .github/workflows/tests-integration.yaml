name: Observe Agent Integration Tests

on:
  workflow_dispatch:
  #push:

#Special permissions required for OIDC authentication
permissions:
    id-token: write
    contents: read
    pull-requests: write

env:
    TF_VAR_name_format: "tf-observe-agent-test-%s"
    TF_VAR_AWS_MACHINE: "AMAZON_LINUX_2023"  #Plan is to matrix this variable RHEL_8_4_0
    TF_VAR_PUBLIC_KEY_PATH: "./test_key.pub"
    TF_VAR_PRIVATE_KEY_PATH: "./test_key.pem" 

#RHEL_8_4_0
jobs:
    observe-agent-integration-tests:
        name: observe-agent-integration-tests-${{ matrix.AWS_MACHINE}}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false 
            matrix:
                #AWS_MACHINE: ["AMAZON_LINUX_2023", "RHEL_8_4_0"]
                AWS_MACHINE: ["AMAZON_LINUX_2023"]
        defaults:
            run:
                working-directory: integration #Terrafrom commands and tests are ran from integration directory
        steps:
            - name: Checkout code
              uses: actions/checkout@v4        
       
            - name: Configure AWS Credentials ## Terraform provider automatically uses these creds 
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
                role-session-name: ${{ github.sha }}
                aws-region: ${{ secrets.AWS_REGION }}
            
            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.10' 
            - run: pip install -r scripts/requirements.txt           
            
            - name: Setup SSH Keys
              run: |
                echo "${{ secrets.SSH_PRIVATE_KEY }}" > ${{env.TF_VAR_PRIVATE_KEY_PATH}}
                chmod 600 ${{env.TF_VAR_PRIVATE_KEY_PATH}}
                echo "${{ secrets.SSH_PUBLIC_KEY }}" >${{env.TF_VAR_PUBLIC_KEY_PATH}}
                chmod 644 ${{env.TF_VAR_PUBLIC_KEY_PATH}}
                ls -l 
                            
            - name: Setup additional terraform variable
              run:  echo "TF_VAR_AWS_MACHINE=$(echo ${{matrix.AWS_MACHINE}})" >> $GITHUB_ENV

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
                
            - name: Terraform Init
              id: init
              run: terraform init

            - name: Terraform Validate
              id: validate
              run: terraform validate -no-color

            - name: Terraform Test
              id: test
              run: |               
                ls -l                                   
                terraform test -verbose 


