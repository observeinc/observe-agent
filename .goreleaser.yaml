# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: linux_build
    binary: observe-agent
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    ldflags: -s -w -X github.com/observeinc/observe-agent/build.Version={{.Version}}

  - id: mac_build
    binary: observe-agent
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
    ldflags: -s -w -X github.com/observeinc/observe-agent/build.Version={{.Version}}

  - id: windows_build
    binary: observe-agent
    env:
      - CGO_ENABLED=0
    goos:
      - windows
    goarch:
      - amd64
      - "386"
    ldflags: -s -w -X github.com/observeinc/observe-agent/build.Version={{.Version}}

archives:
  - id: linux
    formats: ["tar.gz"]
    ids: [linux_build]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      # The default agent config file and the service file live in config.
      - src: "packaging/linux/config/*"
        dst: "."
      - src: "packaging/linux/connections/*"
        dst: "connections"

  - id: windows
    formats: ["zip"]
    ids: [windows_build]
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - src: "packaging/windows/observe-agent.yaml"
        dst: "observe-agent.yaml"
      - src: "packaging/windows/connections/*"
        dst: "connections"

  - id: macos
    formats: ["zip"]
    ids: [mac_build]
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    files:
      - src: "packaging/macos/*"
        dst: "."

changelog:
  use: github
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug Fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "Configuration Updates"
      regexp: '^.*?config(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: "Enhancements"
      regexp: '^.*?internal(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: "Dependency Updates"
      regexp: '^.*?build\(deps\)(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: Others
      order: 999

nfpms:
  - id: linux

    package_name: observe-agent

    # You can change the file name of the package.
    #
    # Default: '{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    # Templates: allowed
    file_name_template: "{{ .ConventionalFileName }}"

    vendor: Observe Inc.

    # Your app's homepage.
    homepage: https://observeinc.com/

    maintainer: Alex Lew <alex.lew@observeinc.com>

    description: |-
      Observe agent.

    license: Apache 2.0

    formats:
      - apk
      - deb
      - rpm
      - termux.deb # Since: v1.11
      - archlinux # Since: v1.13

    # Umask to be used on files without explicit mode set. (overridable)
    #
    # Default: 0o002 (will remove world-writable permissions)
    # Since: v1.19
    umask: 0o002

    # Section.
    section: default

    # Priority.
    priority: extra

    # Contents to add to the package.
    # GoReleaser will automatically add the binaries.
    contents:
      - src: packaging/linux/connections
        dst: /etc/observe-agent/connections
        type: tree

      - src: packaging/linux/config/observe-agent.yaml
        dst: /etc/observe-agent/observe-agent.yaml
        type: config

      - src: packaging/linux/config/observe-agent.service
        dst: /lib/systemd/system/observe-agent.service
        type: config

    scripts:
      preinstall: "packaging/linux/scripts/preinstall.sh"
      postinstall: "packaging/linux/scripts/postinstall.sh"
      preremove: "packaging/linux/scripts/preremove.sh"

nightly:
  tag_name: dev-nightly
  publish_release: true
  keep_single_release: true

release:
  make_latest: "{{ if .IsNightly }}false{{ else }}true{{ end }}"
  tag: "{{ if .IsNightly}}dev-nightly{{ else }}{{ .Tag }}{{ end }}"

  # Add all install scripts to the release
  extra_files:
    - "./scripts/*install*"

dockers:
  - image_templates:
      - &amd64_image_dockerhub "docker.io/observeinc/observe-agent:{{ .Version }}-amd64"
      - &amd64_image_ecr "723346149663.dkr.ecr.us-west-2.amazonaws.com/observe-agent:{{ .Version }}-amd64"
    dockerfile: packaging/docker/Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--platform=linux/amd64"
    extra_files:
      - packaging/docker
  - image_templates:
      - &arm64v8_image_dockerhub "docker.io/observeinc/observe-agent:{{ .Version }}-arm64v8"
      - &arm64v8_image_ecr "723346149663.dkr.ecr.us-west-2.amazonaws.com/observe-agent:{{ .Version }}-arm64v8"
    dockerfile: packaging/docker/Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    build_flag_templates:
      - "--platform=linux/arm64/v8"
    extra_files:
      - packaging/docker

docker_manifests:
  - name_template: "docker.io/observeinc/observe-agent:{{ .Version }}"
    image_templates:
      - *amd64_image_dockerhub
      - *arm64v8_image_dockerhub
  - name_template: "docker.io/observeinc/observe-agent:{{ if .IsNightly}}dev-nightly{{ else }}latest{{ end }}"
    image_templates:
      - *amd64_image_dockerhub
      - *arm64v8_image_dockerhub
  - name_template: "723346149663.dkr.ecr.us-west-2.amazonaws.com/observe-agent:{{ .Version }}"
    image_templates:
      - *amd64_image_ecr
      - *arm64v8_image_ecr
  - name_template: "723346149663.dkr.ecr.us-west-2.amazonaws.com/observe-agent:{{ if .IsNightly}}dev-nightly{{ else }}latest{{ end }}"
    image_templates:
      - *amd64_image_ecr
      - *arm64v8_image_ecr

git:
  ignore_tags:
    - "{{ if not .IsNightly }}dev-nightly{{ end }}"

furies:
  - account: observeinc
    # TODO add a separate account for nightly releases
    disable: "{{ if .IsNightly }}true{{ end }}"
