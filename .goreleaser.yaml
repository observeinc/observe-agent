# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - id: default
    binary: observe-agent
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    ldflags: -s -w -X github.com/observeinc/observe-agent/build.Version={{.Version}}

  - id: mac_build
    binary: observe-agent
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
    ldflags: -s -w -X github.com/observeinc/observe-agent/build.Version={{.Version}}

  - id: windows_build
    binary: observe-agent
    env:
      - CGO_ENABLED=0
    goos:
      - windows
    goarch:
      - amd64
      - '386'
    ldflags: -s -w -X github.com/observeinc/observe-agent/build.Version={{.Version}}

archives:
  - id: default
    format: tar.gz
    builds:
      - default
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - src: "packaging/linux/etc/observe-agent/*"
        dst: "."
      - src: "packaging/linux/config/*"
        dst: "."

  - id: windows
    format: zip
    builds:
      - windows_build
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - src: "packaging/windows/config/otel-collector.yaml"
        dst: "otel-collector.yaml"
      - src: "packaging/windows/observe-agent.yaml"
        dst: "observe-agent.yaml"
      - src: "packaging/windows/connections/host_monitoring/*"
        dst: "connections/host_monitoring"
      - src: "packaging/windows/connections/self_monitoring/*"
        dst: "connections/self_monitoring"

  - id: macos
    format: zip
    builds:
      - mac_build
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    files:
      - src: "packaging/macos/*"
        dst: "."

changelog:
  use: github
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug Fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "Configuration Updates"
      regexp: '^.*?config(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: "Enhancements"
      regexp: '^.*?internal(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: "Dependency Updates"
      regexp: '^.*?build\(deps\)(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: Others
      order: 999

nfpms:
  - id: default

    package_name: observe-agent

    # You can change the file name of the package.
    #
    # Default: '{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    # Templates: allowed
    file_name_template: "{{ .ConventionalFileName }}"

    vendor: Observe Inc.

    # Your app's homepage.
    homepage: https://observeinc.com/

    maintainer: Alex Lew <alex.lew@observeinc.com>

    description: |-
      Observe agent.

    license: Apache 2.0

    formats:
      - apk
      - deb
      - rpm
      - termux.deb # Since: v1.11
      - archlinux # Since: v1.13

    # Umask to be used on files without explicit mode set. (overridable)
    #
    # Default: 0o002 (will remove world-writable permissions)
    # Since: v1.19
    umask: 0o002

    # Section.
    section: default

    # Priority.
    priority: extra

    # Contents to add to the package.
    # GoReleaser will automatically add the binaries.
    contents:
      - src: packaging/linux/etc/
        dst: /etc
        type: tree

      - src: packaging/linux/config/observe-agent.yaml
        dst: /etc/observe-agent/observe-agent.yaml
        type: config

      - src: packaging/linux/config/observe-agent.service
        dst: /lib/systemd/system/observe-agent.service
        type: config

    # Scripts to execute during the installation of the package. (overridable)
    #
    # Keys are the possible targets during the installation process
    # Values are the paths to the scripts which will be executed.
    #
    # Templates: allowed (since v1.20)
    scripts:
      preinstall: "packaging/linux/scripts/preinstall.sh"
      postinstall: "packaging/linux/scripts/postinstall.sh"
      preremove: "packaging/linux/scripts/preremove.sh"

dockers:
  - image_templates:
      - &amd64_image_dockerhub "docker.io/observeinc/observe-agent:{{ .Version }}-amd64"
      - &amd64_image_ecr "723346149663.dkr.ecr.us-west-2.amazonaws.com/observe-agent:{{ .Version }}-amd64"
    dockerfile: packaging/docker/Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--platform=linux/amd64"
    extra_files:
      - packaging/docker
  - image_templates:
      - &arm64v8_image_dockerhub "docker.io/observeinc/observe-agent:{{ .Version }}-arm64v8"
      - &arm64v8_image_ecr "723346149663.dkr.ecr.us-west-2.amazonaws.com/observe-agent:{{ .Version }}-arm64v8"
    dockerfile: packaging/docker/Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    build_flag_templates:
      - "--platform=linux/arm64/v8"
    extra_files:
      - packaging/docker

docker_manifests:
  - name_template: "docker.io/observeinc/observe-agent:{{ .Version }}"
    image_templates:
      - *amd64_image_dockerhub
      - *arm64v8_image_dockerhub
  - name_template: "docker.io/observeinc/observe-agent:latest"
    image_templates:
      - *amd64_image_dockerhub
      - *arm64v8_image_dockerhub
  - name_template: 723346149663.dkr.ecr.us-west-2.amazonaws.com/observe-agent:{{ .Version }}
    image_templates:
      - *amd64_image_ecr
      - *arm64v8_image_ecr
  - name_template: 723346149663.dkr.ecr.us-west-2.amazonaws.com/observe-agent:latest
    image_templates:
      - *amd64_image_ecr
      - *arm64v8_image_ecr

msi:
  - # ID of the resulting installer.
    #
    # Default: the project name
    # id: foo

    # Filename of the installer (without the extension).
    #
    # Default: '{{.ProjectName}}_{{.MsiArch}}'
    # Templates: allowed
    name: "observe-agent_{{ .Version }}-{{.MsiArch}}"

    # The WXS file used to create the installers.
    # The file contents go through the templating engine, so you can do things
    # like `{{.Version}}` inside of it.
    #
    # Templates: allowed
    # Required.
    wxs: ./packaging/windows/app.wsx

    # IDs of the archives to use.
    # Empty means all IDs.
    # ids:
    #   - foo
    #   - bar

    # GOAMD64 to specify which amd64 version to use if there are multiple
    # versions from the build section.
    #
    # Default: v1
    goamd64: v1

    # More files that will be available in the context in which the installer
    # will be built.
    # extra_files:
    #   - logo.ico

    # Whether to remove the archives from the artifact list.
    # If left as false, your end release will have both the zip and the msi
    # files.
    replace: false

    # Set the modified timestamp on the output installer, typically
    # you would do this to ensure a build was reproducible.
    # Pass an empty string to skip modifying the output.
    #
    # Templates: allowed.
    mod_timestamp: "{{ .CommitTimestamp }}"

brews:
  -
    # Name of the recipe
    #
    # Default: ProjectName
    # Templates: allowed
    name: observe-agent

    # Alternative names for the current recipe.
    #
    # Useful if you want to publish a versioned formula as well, so users can
    # more easily downgrade.
    #
    # Since: v1.20 (pro)
    # Templates: allowed
    # alternative_names:
    #   - myproject@{{ .Version }}
    #   - myproject@{{ .Major }}

    # IDs of the archives to use.
    # Empty means all IDs.
    # ids:
    # - foo
    # - bar

    # Sets the app file within a DMG.
    #
    # Since: 1.24 (pro)
    # app: MyApp.app

    # GOARM to specify which 32-bit arm version to use if there are multiple
    # versions from the build section. Brew formulas support only one 32-bit
    # version.
    #
    # Default: 6
    goarm: 6

    # GOAMD64 to specify which amd64 version to use if there are multiple
    # versions from the build section.
    #
    # Default: v1
    goamd64: v1

    # NOTE: make sure the url_template, the token and given repo (github or
    # gitlab) owner and name are from the same kind.
    # We will probably unify this in the next major version like it is
    # done with scoop.

    # URL which is determined by the given Token (github, gitlab or gitea).
    #
    # Default depends on the client.
    # Templates: allowed
    # url_template: "https://github.mycompany.com/foo/bar/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Headers to include in the `url` stanza.
    # This can be a more modern alternative to `download_strategy` in some
    # cases.
    #
    # Since: v1.25
    # url_headers:
    #   - "Accept: application/octet-stream"
    #   - 'Authorization: bearer #{ENV["HOMEBREW_GITHUB_API_TOKEN"]}'

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    # download_strategy: CurlDownloadStrategy
    # download_strategy: GitHubPrivateRepositoryReleaseDownloadStrategy

    # Allows you to add a custom require_relative at the top of the formula
    # template.
    # custom_require: custom_download_strategy

    # Git author used to commit to the repository.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com

    # The project name and current git tag are used in the format string.
    #
    # Templates: allowed
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # Directory inside the repository to put the formula.
    # directory: Formula

    # Caveats for the user of your binary.
    # caveats: "How to use this binary"

    # Your app's homepage.
    homepage: "https://observeinc.com/"

    # Your app's description.
    #
    # Templates: allowed
    description: "Observe-Agent is a tool for collecting and exporting metrics from your infrastructure."

    # SPDX identifier of your app's license.
    license: "Apache-2.0"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist directory
    # only, leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    #
    # Templates: allowed
    skip_upload: true

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # custom_block: |
    #   head "https://github.com/some/package.git"
    #   ...

    # Packages your package depends on.
    # dependencies:
    #   - name: git
    #     # Allow to specify the OS in which the dependency is required.
    #     # Valid options are `mac` and `linux`.
    #     #
    #     # Since: v1.23.0
    #     os: mac
    #   - name: zsh
    #     type: optional
    #   - name: fish
    #     version: v1.2.3
    #   # if providing both version and type, only the type will be taken into
    #   # account.
    #   - name: elvish
    #     type: optional
    #     version: v1.2.3


    # Packages that conflict with your package.
    # conflicts:
    #   - svn
    #   - bash

    # Specify for packages that run as a service.
    # plist: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #   # ...

    # Service block.
    #
    # Since: v1.7
    # service: |
    #   run: foo/bar
    #   # ...

    # So you can `brew test` your formula.
    #
    # Template: allowed
    # test: |
    #   system "#{bin}/foo --version"
    #   # ...

    # Custom install script for brew.
    #
    # Template: allowed
    # Default: 'bin.install "BinaryName"'
    # install: |
    #   bin.install "some_other_name"
    #   bash_completion.install "completions/foo.bash" => "foo"
    #   # ...

    # Additional install instructions so you don't need to override `install`.
    #
    # Template: allowed
    # Since: v1.20
    # extra_install: |
    #   bash_completion.install "completions/foo.bash" => "foo"
    #   man1.install "man/foo.1.gz"
    #   # ...

    # Custom post_install script for brew.
    # Could be used to do any additional work after the "install" script
    # post_install: |
    #     etc.install "app-config.conf"
    #   # ...

    # Repository to push the generated files to.
    repository:
      # Repository owner.
      #
      # Templates: allowed
      owner: observeinc

      # Repository name.
      #
      # Templates: allowed
      name: homebrew-tap

      # Optionally a branch can be provided.
      #
      # Default: default repository branch
      # Templates: allowed
      branch: main

      # Optionally a token can be provided, if it differs from the token
      # provided to GoReleaser
      # Templates: allowed
      # token: "{{ .Env.GITHUB_PERSONAL_AUTH_TOKEN }}"

      # Sets up pull request creation instead of just pushing to the given branch.
      # Make sure the 'branch' property is different from base before enabling
      # it.
      #
      # Since: v1.17
      pull_request:
        # Whether to enable it or not.
        enabled: true

        # Whether to open the PR as a draft or not.
        #
        # Since: v1.19
        draft: true

        # If the pull request template has checkboxes, enabling this will
        # check all of them.
        #
        # This feature is only available in GoReleaser Pro.
        # Since: v1.20 (pro)
        check_boxes: true

        # Base can also be another repository, in which case the owner and name
        # above will be used as HEAD, allowing cross-repository pull requests.
        #
        # Since: v1.19
        base:
          # owner: goreleaser
          # name: my-repo
          branch: main

git:
  ignore_tag_prefixes:
    - dev
    - nightly

furies:
  - account: observeinc
    disable: "{{ .IsNightly }}"
